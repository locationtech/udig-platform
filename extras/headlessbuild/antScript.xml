<!--
	This program and the accompanying materials are made available
	under the terms of the Eclipse Public License v1.0 which
	accompanies this distribution, and is available at
  	http://www.eclipse.org/legal/epl-v10.html
	
	This build script creates a build directory containing the plugins
	and features to be built, and then kicks off the PDE build process.
	You could just as easily do this from a shell script or cron job.
	
	Also, the script can be run inside the Eclipse IDE by choosing 
	Run As -> Ant Build from the context menu. It could obviously be
	run outside of the IDE if you have ANT installed on your path.
	
	If you have any questions about this build, feel free to contact me
	at jeichar.w@gmail.com.
-->
<project name="net.refractions.udig.build" default="pde-build" basedir="../../">
	<property file="build.properties" />

	<dirname file="${ant.file.net.refractions.udig.build}" property="headless_build_basedir"/>	

	<!--
		PDE Build expects that the build directory contains a "plugins" 
		directory and a "features" directory. These directories should contain
		the various plug-ins and features to be built.
	-->
	<target name="init">
	  
	  <mkdir dir="${buildDirectory}" />
	  <!-- delete the directory with previous builds -->
	  <delete dir="${buildDirectory}/${buildLabel}" />
	  <!-- delete previous copy of aboutMappings (maybe not necessary since sync will restore it)-->
	  <delete file="${buildDirectory}/plugins/${aboutMappings}" />
	  
	  <!-- delete generated ant files from previous builds -->
	  <delete >
	    <fileset dir="${buildDirectory}" includes="*.xml"/>
	    <fileset dir="${buildDirectory}" includes="*.properties"/>
	  </delete>
	  
		<mkdir dir="${buildDirectory}" />
		<mkdir dir="${buildDirectory}/plugins" />
		<mkdir dir="${buildDirectory}/features" />
		

		<!-- copy all plugins to the build's plugin directory
			 dont copy generated objects (classes for example -->
		<sync todir="${buildDirectory}/plugins">
			<!-- copy core plugins to the build's plugin directory-->
			<fileset dir="${basedir}/plugins/">
				<exclude name="**/.svn/" />
				<exclude name="**/bin/" />
				<exclude name="net.refractions.udig.libs/libs/" />
				<exclude name="net.refractions.udig.libs.source/**/*.zip" />
			</fileset>
			<!-- copy tutorials plugins to the build's plugin directory (mainly for sdk build)-->
			<fileset dir="${basedir}/tutorials/">
				<exclude name="**/.svn" />
				<exclude name="**/bin/" />
				<exclude name="*-feature/" />
			</fileset>
			<!-- copy core fragments to the build's plugin directory-->
	<!-- not required anymore
			<fileset dir="${basedir}/fragments/">
				<exclude name="**/.svn" />
				<exclude name="**/bin/" />
			</fileset>
	-->
			<!-- 3rd parties can add their plugins here-->
		</sync>
		<!-- copy all features to the build's feature directory-->
		<sync todir="${buildDirectory}/features">
			<fileset dir="${basedir}/features">
				<exclude name="**/.svn/**" />
				<exclude name="**/bin/" />
				<!-- 3rd parties can add their features here-->
			</fileset>
			<fileset dir="${basedir}/tutorials/">
				<exclude name="**/.svn" />
				<exclude name="**/bin/" />
				<include name="*-feature/" />
			</fileset>
		</sync>
		
		<tstamp>
		    <format property="date" pattern="MMM dd, yyyy" />
		</tstamp>
		<tstamp>
		    <format property="timestamp" pattern="yyyyMMddHHZ" />
		</tstamp>
		<tstamp>
		    <format property="versionTimestamp" pattern="yyyyMMddHH" />
		</tstamp>
		
        <property name="versionReplace" value="${version}-${versionTimestamp}" />
        		
		<replace file="${buildDirectory}/plugins/${aboutMappings}">
		     <replacefilter token="@date@" value="${date}"/>
		     <replacefilter token="@timestamp@" value="${timestamp}"/>
		     <replacefilter token="@version@" value="${versionReplace}"/>
		</replace>
		
		<ant dir="${buildDirectory}/plugins/net.refractions.udig.libs/" antfile="refresh.xml" target="full-build" inheritAll="false" inheritRefs="false"/>
		<ant dir="${buildDirectory}/plugins/net.refractions.udig.libs.source/" antfile="refresh.xml" target="full-build" inheritAll="false" inheritRefs="false"/>
	</target>

	<!--
		This target actually executes the PDE Build process by launching the 
		Eclipse antRunner application.
		
		NOTE: If you are using Eclipse 3.2, switch out the pathelement below
		with the one that is commented out.
	-->
	<target name="pde-build" depends="init">
		<property name="builderFile" value="${eclipseLocation}/plugins/org.eclipse.pde.build_${pdeBuildPluginVersion}/scripts/productBuild/productBuild.xml" />
		<property name="launcherPlugin" value="${eclipseLocation}/plugins/org.eclipse.equinox.launcher_${equinoxLauncherPluginVersion}.jar" />
		<echo message="archive name is ${archiveNamePrefix}" />
		
		<java classname="org.eclipse.equinox.launcher.Main" fork="true" failonerror="true">
		    <!--arg value="-debug" /-->
			<arg value="-application" />
			<arg value="org.eclipse.ant.core.antRunner" />
			<!--arg value="-verbose" /-->
			<arg value="-buildfile" />
			<arg value="${builderFile}" />
			<arg value="-Dtimestamp=${timestamp}" />
			<classpath>
				<pathelement location="${launcherPlugin}" />
			</classpath>
			<jvmarg value="-Xmx512M"/>
		</java>
	</target>

	<target name="clean">
		<delete dir="${buildDirectory}" />
	</target>

</project>
