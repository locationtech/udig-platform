h1. uDig Overview

The User-friendly Desktop Internet GIS (uDig) is an open source ("EPL":http://www.eclipse.org/legal/epl-v10.html + "BSD":http://udig.refractions.net/files/bsd3-v10.html) desktop application framework, built with the Eclipse Rich Client (RCP) technology.

* uDig can be used as a stand-alone application
* uDig can be extended with RCP "plug-ins"
* uDig can be used as a plug-in in an existing RCP application

uDig is an open project, with developers from multiple companies participating in the decision making process and project direction.

h2. Website

* uDig Project - http://locationtech.org/projects/technology.udig
* uDig Website - "http://udig.refractions.net/":http://udig.refractions.net/
* Developers Guide - "http://udig.refractions.net/developers/":http://udig.refractions.net/developers/

h2. Project Outline

The goal of uDig is to provide a complete Java solution for desktop GIS data access, editing, and viewing. uDig aims to be:
* <b>U</b>ser friendly, providing a familiar graphical environment for GIS users;
* <b>D</b>esktop located, running as a thick client, natively on Windows, Mac OS/X and Linux;
* <b>I</b>nternet oriented, consuming standard (WMS, WFS, WCS) and de facto (GeoRSS, KML, tiles) geospatial web services; and,
* <b>G</b>IS ready, providing the framework on which complex analytical capabilities can be built, and gradually subsuming those capabilities into the main application.

h2. Steering Committee

* Frank Gasdorf @fgdrf
* Jesse Eichar @jesseeichar 
* Jody Garnett @jodygarnett 
* Mauricio Pazos @mpazos 

h2. Contributing

Join us in working on uDig: "Contributing":CONTRIBUTING.textile

There are two ways to take part: indirectly using github pull requests; and directly by obtaining commit access. Remember that a pull request is the start of a conversation!

h1. Build Instructions

1. Check out Repository
   
   Check out the branch you wish to work with (or fork as you see fit).

   To check it out:
<pre>
<code>
git clone https://github.com/locationtech/udig-platform udig
cd udig
</code>
</pre>

2. Download stuff (using maven to launch small ant download scripts):

<pre>
<code>
mvn clean install -f pom-libs.xml

[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 8:05.291s
</code>
</pre>

h2. Option - Command Line Build

1. Tycho Build

   For requirements to build docs with profile `docs` ("Sphinx reStructuredText":https://www.sphinx-doc.org/en/master/usage/restructuredtext/basics.html)
   consult "detailed doc description":docs/readme.txt :

<pre>
<code>
mvn clean install -Pproduct -Psdk -Pdocs

[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 12:44.827s
</code>
</pre>

2. Test an individual module

   This requires successful previous step with install goal

<pre>
<code>
cd plugins/org.locationtech.udig.catalog.ui.tests
mvn clean install -Ptest -fae
</code>
</pre>
