<?xml version="1.0" encoding="UTF-8"?>
<!--
   You need to install sphinx (and Python) for this module to build.
   
   The ant build.xml file takes care of checking if sphinx-build is available 
   on the path - and if avaialble it uses it to genrate the docs.
   
   Clean build using maven:
   
   mvn clean install
   
   Just build one:
   
   mvn install -Puser
   mvn clean install -Pdevel
   
   You can also use ant directly:
   
   ant clean
   ant full
   ant user
   ant devel
   ant data
   
   This class also contains scripts used to prep and convert.

   Convert from Confluence Space (see http://udig.refractions.net/confluence/spaces/exportspace.action?key=DEV)

   "XML Export" into textile format:
   
   mvn exec:java -Dexec.mainClass="docs.ConvertConfluence" -Dexec.args="?"
   mvn exec:java -Dexec.mainClass="docs.ConvertConfluence" -Dexec.args="~/Desktop/EN/ ~/Desktop/user"

   "html Export" (pandoc is required to convert between markup languages (http://johnmacfarlane.net/pandoc/installing.html))

   mvn exec:java -Dexec.mainClass="html.BulkConvert" -Dexec.args="/path/to/exported/html/index.html /path/to/target/rst/folder"


   You will probably have to copy the images over yourself.
   -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0                                 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.locationtech</groupId>
    <artifactId>udig-tycho</artifactId>
    <version>1.5.0-SNAPSHOT</version>
  </parent>
  
	<!-- =========================================================== -->
	<!-- Module Description -->
	<!-- =========================================================== -->
    <artifactId>udig-docs</artifactId>
    <name>uDig Documentation</name>

    <description>
     Documentation generation for the uDig project including user guide and developer guide.
    </description>
  
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
  </dependencies>
  
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>.</directory>
              <includes>
                <include>common.pyc</include>
              </includes>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>ant</groupId>
            <artifactId>ant</artifactId>
            <version>1.6.5</version>
          </dependency>
          <dependency>
            <groupId>ant-contrib</groupId>
            <artifactId>ant-contrib</artifactId>
            <version>1.0b3</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>compile</id>
            <phase>compile</phase>
            <configuration>
              <tasks>
                <ant antfile="build.xml" dir="${basedir}" target="${target}">
                  <property name="build.directory" value="${project.build.directory}"/>
                  <property name="project.version" value="${project.version}"/>
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>package</id>
            <phase>package</phase>
            <configuration>
              <tasks>
                 <!-- create online-help.zip artifact and attach it afterwards as a build result -->
                 <copy todir="${project.build.directory}/udig-eclipse-help/EN">
                    <fileset dir="${project.build.directory}/user/en/simple" excludes="**/_sources/**"/>
                 </copy>
                 <copy file="${basedir}/user/toc.xml" todir="${project.build.directory}/udig-eclipse-help" />
                 <zip destfile="${project.build.directory}/udig-eclipse-help.zip" basedir="${project.build.directory}/udig-eclipse-help" />
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-artifacts</id>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <artifacts>
                <artifact>
                  <file>${project.build.directory}/udig-eclipse-help.zip</file>
                  <type>zip</type>
                  <classifier>udig-eclipse-help</classifier>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
    <pluginManagement>
    	<plugins>
    		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
    		<plugin>
    			<groupId>org.eclipse.m2e</groupId>
    			<artifactId>lifecycle-mapping</artifactId>
    			<version>1.0.0</version>
    			<configuration>
    				<lifecycleMappingMetadata>
    					<pluginExecutions>
    						<pluginExecution>
    							<pluginExecutionFilter>
    								<groupId>
    									org.apache.maven.plugins
    								</groupId>
    								<artifactId>
    									maven-antrun-plugin
    								</artifactId>
    								<versionRange>[1.3,)</versionRange>
    								<goals>
    									<goal>run</goal>
    								</goals>
    							</pluginExecutionFilter>
    							<action>
    								<ignore></ignore>
    							</action>
    						</pluginExecution>
    					</pluginExecutions>
    				</lifecycleMappingMetadata>
    			</configuration>
    		</plugin>
    	</plugins>
    </pluginManagement>
  </build>

  <properties>
     <target>full</target>
  </properties>

  <profiles>
    <profile>
      <id>devel</id>
      <properties>
        <target>devel</target>
      </properties>
    </profile>
    <profile>
      <id>user</id>
      <properties>
        <target>user</target>
      </properties>
    </profile>
    <profile>
      <id>data</id>
      <properties>
        <target>data</target>
      </properties>
    </profile>
  </profiles>
  
</project>
