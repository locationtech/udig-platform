Per Attribute Security
######################

uDig : Per Attribute Security

This page last changed on Sep 21, 2012 by jgarnett.

Motivation
==========

We are hooking up a system that has per attribute restrictions. We need to allow the edit tools to
notice; allow table view and others to notice. We will also hook into **EditFeature** and
**UDIGFeatureSource** to ensure if straight up GeoTools code does not have a chance to accidentally
modify attributes without permission.

Inspiration
===========

We are looking at a system with per attribute security; for the most part this is very easy to
implement. However we run into trouble when the "attribute" is the geometry.

Proposal
========

This proposal is to allow a GeoReosurce to resolve to a data structure defining any permission
considerations with respect to editing (or viewing?) contents.

.. code:: code-java

    interface GeoResourcePermission {
       boolean canEdit( String name );
    }

Idea: GeoTools allows us to through information around via FeatureType user property values.

.. code:: code-java

    boolean canEdit = attributeDescriptor.getUserProperty("edit");
    field.setEditable( canEdit );

If not we will need to resolve to GeoResourcePermission directly:

.. code:: code-java

    GeoResourcePermission permission = layer.resolve( GeoResourcePermission.class, null );

    field.setText( String.valueOf( attribute.getValue() ) );
    field.setEditable( permission.canEdit( attribute.getName() ) );

**FeatureStore Interceptor**

At the most basic level uDig will be responsible for not allowing a "naked" FeatureStore to be
released without an appropriate security checks in place.

To accomplish this an new interceptor will be created to apply a SecurityDataStore wrapper around
the raw DataStore prior to releasing it to the rest of the application.

**Edit Tool**

We will need a PermissionObjectProperty which can be used by the edit tools to check permission.

We will probably need a PermissionGeometryObjectProperty that checks permission and knows enough to
sort out what the default geometry is!

**EditFeature**

The EditFeature can also be given an interceptor allowing per attribute security to be respected
regardless of change vector (i.e. which command is trying to make the change).

This will catch any edit tools that don't bother to enable based on interaction and security checks.
They will produce an error when trying to call setAttribute( name, value ) on the current
EditFeature.

**TableView**

TableView can also resolve to **GeoResourcePermission** and check this when configuring CellEditors.

API
---

|image0|

-  ISecurity will resolve to both a GeoResource and a TableResource
-  DefaultSecurity will be an implementation of ISecurity that returns true for any attributes.

Status
======

Project Steering committee support:

-  Andrea Antonello: +0
-  Jesse Eichar: +0
-  Jody Garnett: +0
-  Mauricio Pazos: +0

Committer Support:

-  

A vote of -1 requires an alternate suggestion; community members are invited to indicate
support/suggestions.

Documentation
=============

Documentation change to `Developers
Guide <http://udig.refractions.net/confluence//display/DEV/Home>`__ or `Project
Procedures <http://udig.refractions.net/confluence//display/ADMIN/Home>`__ (for an accepted change).

Tasks
=====

A list of the tasks needed to accomplish this change; if you prefer you can use a single Jira issue
with subtasks. It is important to include any deadlines so the community knows when you are working
to a schedule.

Â 

no progress

|image1|

in progress

|image2|

blocked

|image3|

help needed

|image4|

done

Tasks:

#. Define the GeoResourcePermission interface
#. Default implementation of NullGeoResourcePermission which returns true
#. Create ObjectProperty implementations to allow edit tools to check if the geometry can be edited
#. 
#. |image5| Initial design for review and feedback
#. |image6| Initial implementation and test cases
#. |image7| Review from PSC member
#. Integration with catalog plugin
#. Updated developers guide documentation

Estimated Delivery: September 2012

Status:

-  [ UDIG-xxxx http://jira.codehaus.org/browse/UDIG-xxxx]

| 

Attachments:

| |image8| `attribute\_security.PNG <download/attachments/13534682/attribute_security.PNG>`__
(image/png)

+------------+----------------------------------------------------------+
| |image10|  | Document generated by Confluence on Aug 11, 2014 12:31   |
+------------+----------------------------------------------------------+

.. |image0| image:: /images/per_attribute_security/attribute_security.png
.. |image1| image:: images/icons/emoticons/star_yellow.gif
.. |image2| image:: images/icons/emoticons/error.gif
.. |image3| image:: images/icons/emoticons/warning.gif
.. |image4| image:: images/icons/emoticons/check.gif
.. |image5| image:: images/icons/emoticons/check.gif
.. |image6| image:: images/icons/emoticons/check.gif
.. |image7| image:: images/icons/emoticons/warning.gif
.. |image8| image:: images/icons/bullet_blue.gif
.. |image9| image:: images/border/spacer.gif
.. |image10| image:: images/border/spacer.gif
