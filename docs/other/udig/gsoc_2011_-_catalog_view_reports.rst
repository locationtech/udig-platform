Gsoc 2011 - Catalog View Reports
################################

uDig : GSoC 2011 - Catalog View Reports

This page last changed on Aug 20, 2011 by mifanc.

| Final Documentation for `UDIG:CatalogNG <CatalogNG.html>`__

Weekly Report Aug 20 2011
~~~~~~~~~~~~~~~~~~~~~~~~~

-  2 days before hard pencils down
-  Very successful week and good progress
-  Following the last IRC, couple of changes were suggested
-  As per my suggestion, I completed the migration from a multi-view catalogng to a single view
   catalogng with components
-  Create the 4 components that listen to each other for changes
-  Created a catalog listener to push catalog changes
-  Created a custom provider class to handle single view listeners
-  Code cleanup

Todo
^^^^

-  Create documentation on wiki

Weekly Report Aug 13 2011
~~~~~~~~~~~~~~~~~~~~~~~~~

-  2 days before soft-pencils down
-  Hard pencil's down on 22 August
-  IRC chat scheduled for
   http://www.timeanddate.com/worldclock/meetingdetails.html?year=2011&month=8&day=11&hour=11&min=0&sec=0&p1=389&p2=37
-  ServiceTypeView shows a list of service types (currently File, Web, Database and Uncategorized) -
   this is filtered and generated by running through a list of IResolves obtained from all the
   catalogs
-  ServiceView shows a list of services which differ according to the service type selected.
   Currently when File is selected in Service Type, Service shows a list of directories, grouped
   adhoc, that contains local files. When Web is selected in Service Type, a list of Web Services
   are shown in this view
-  Data Type \| Feature Type is blank by default. When a Service Type and Service is selected, it
   shows the relevant tree which differs based on Service Type, again.

Next steps
^^^^^^^^^^

-  Cleanup code
-  Completion
-  Tests
-  i18n
-  Documentation (both for Javadoc and in a separate wiki page)
-  Add listeners for TreeViews to listen to Catalog changes
-  Add 4 views to single perspective

Weekly Report Aug 5 2011
~~~~~~~~~~~~~~~~~~~~~~~~

-  Chat with Jody
-  Identified need for having in memory catalog instead of reusing CatalogImpl
-  Merged with trunk to access new MemoryCatalog committed by Jody
-  Loads of errors - rebuilding and running refresh.xml
-  Successfully merged with trunk code - app back to working condition again
-  Completed ServiceTypeView to show service types
-  Implemented function to iterate through IResolves from all catalogs and build a tree of service
   types (File, Web, Database etc.)
-  Implemented function to iterate through IResolves from all catalogs and build a tree of services
-  Implemented l10n Messages - need to fix bugs here
-  Implemented listener in ServiceView to listen to ServiceType selections

Next week
^^^^^^^^^

-  DataTypeView and LayerView
-  Complete integration
-  Complete listeners
-  Complete l10n

Weekly Report Jul 30 2011
~~~~~~~~~~~~~~~~~~~~~~~~~

-  More debugging to figure out flow
-  Creation of a CatalogNGTreeFilter to take CatalogImpl objects, filter them and return CatalogImpl
   objects for the CatalogNGTreeViewer's setInput
-  Usage of CatalogNGTreeFilter within CatalogNGTreeViewer
-  Clone of CatalogImpl object to modify it according to view (this will change based on our last
   chat)

Next steps
^^^^^^^^^^

-  Usage of MemoryCatalog
-  Use ISearch for a temp catalog

Weekly Report Jul 22 2011
~~~~~~~~~~~~~~~~~~~~~~~~~

Progress
^^^^^^^^

-  Based on midterm chat with Andrea, changed direction of project a bit
-  Plugin named as CatalogNG (NG: Next Generation)
-  Created a new plugin project (eu.udig.catalog.ng) on the external namespace for catalog browse
   plugin
-  Recreated ServiceTypeView,ServiceView,LayerView and DataTypeView views
-  Created CatalogNGUIPlugin as the Activator for this plugin - hopefully call CatalogPlugin without
   modifications and have a filter in front
-  Ran Debug with breakpoints in CatalogPlugin, CatalogUIPlugin, CatalogImpl etc to see the actual
   workflow of operations
-  Research on how to create a filter keeping the CatalogPlugin in tact. I guess this would be good
   since I'm not planning to change how the underlying catalog works

Next Steps
''''''''''

-  Create a filter
-  Create relationships between views

Weekly Report Jul 9 2011
~~~~~~~~~~~~~~~~~~~~~~~~

Progress
^^^^^^^^

-  Created new extensions for views under net.refractions.udig.catalog.ui

#. Service
#. Service Type
#. Data Type View
#. LayerView

-  These correspond to net.refractions.udig.catalog.ui.browse

#. ServiceView.java
#. ServiceTypeView.java
#. DataTypeView.java
#. LayerView.java

-  Added views to catalog category so that it shows up under the catalog group in Views
-  Created ServiceTypeTreeViewer to read from plugin and show tree view
-  Created CatalogServiceTypePlugin under net.refractions.udig.catalog to read from catalog -
   implement catalog filter for service type here
-  Read up on IAdaptable and ISelectionListener to implement views that listen to each other
-  Commits
-  Pushed to branch:mifanc

Weekly Report Jul 2 2011
~~~~~~~~~~~~~~~~~~~~~~~~

Progress
^^^^^^^^

-  Created a version C of the browse concept - confident that it can handle most scenarios
-  Started working on views
-  Re-setup the Eclipse workspace since there were errors last time around
-  Missed out on time to have IRC, during the weekend as well - should try to catchup this week

Revised Concept
'''''''''''''''

-  Cater to non-web Service Types
-  Data Type doesn't lead to more useful breakdowns - use in a different way
-  Service - act differently for different types of services

Catalog Browse Concept - C
^^^^^^^^^^^^^^^^^^^^^^^^^^

Service Type
''''''''''''

-  Web, File, Directory, PostGIS,

Service
'''''''

-  for Files, group by immediate super directory (Adhoc Grouping)
-  for Web, show unique web services
-  for Directories, show directories

Data Type
'''''''''

-  Show all data types, groped by Vector and Raster with drop downs
-  For Vectors, show Feature Type under Vector
-  For rasters, show either of RGB, DEM, LANDSAT ... under Raster
-  WMS - Untyped

File (shapefiles from local filesystem) - Version 2
                                                   

Service Type

Service

Data Type

Layers

File

DIR:Dengue

+Vector\\/

Dengue

 

DIR:Elections

-Dengue

Elections

 

 

-Elections

District

see `weekly\_report\_jun\_24 <#GSoC2011-CatalogViewReports-weeklyreportjun24>`__ for older version

Web - version 2
               

Service Type

Service

Data Type

Layers

Web

ESRI WMS

+Vector \\/

OM\_FIN\_WHALES\_Core

 

FGDC WMS

-OM\_FIN\_WHALES\_Poly

OM\_FIN\_WHALES\_Poly

 

ESA Cubeserve

-GISDATA\_FISHTRAPS\_PT

GISDATA\_FISHTRAPS\_PT

 

Geoserver WFS

-GISDATA\_FISHTRAPS

 

 

 

+Raster \\/

ESA Canada Boundaries

 

 

-Untyped

ESA Ontario

Folder with Shapefiles (shapefiles from local filesystem added as a directory) - version 2
                                                                                          

Service Type

Service

Data Type

Layers

DIRECTORY

DIR:Elections

+Vector \\/

Centers

 

 

-Voting

Voting

 

 

-Outbreaks

Outbreaks

 

DIR:Districts

-Districts

Landuse

Folder with TIFF and SHP - version 2
                                    

Service Type

Service

Data Type

Layers

DIRECTORY

DIR:ELECTIONS

+Vectors \\/

Centers

 

 

-Centers

Voting

 

 

+Raster \\/

Outbreaks

 

 

-DEM

Landuse

Weekly Report June 24 2011
~~~~~~~~~~~~~~~~~~~~~~~~~~

What I did
^^^^^^^^^^

-  Expanded on examples
-  More research on suggestions
-  Current view works for Web but not so useful for the others - this is proven in the scenarios
   shown below
-  First view for Service Type
-  Looking into creating Perspectives?

Stumbling Block
^^^^^^^^^^^^^^^

-  Big stumbling block!
-  In most cases, Service, Data Type and Layer is the same, for instance with shapefiles. In a case
   where 100 shapefiles from the local system is loaded, this is not helpful.
-  Have to re-think the usage - maybe change Data Type around a bit

Next week
^^^^^^^^^

-  Create views
-  Create a perspective?
-  Re-do the views
-  Put up newer ideas on wiki

More examples based on Scenario 1
'''''''''''''''''''''''''''''''''

-  shapefiles
-  folder of shapefiles
-  tiff
-  asc
-  folder with tiff and asc
-  folder with tiff and shapefiles
-  postgis connection
-  no4j connection (or H2 or sqlite)

Catalog Browse Concept B
^^^^^^^^^^^^^^^^^^^^^^^^

Service Type
            

The following maybe the first level Service Type(s)

-  Web, File, Directory, Decorator, Database etc...
    e.g:
   Service Type
   Service
   Data Type
   Layer
   Web
    
    
   File
    
    
   DIR: Election
    
    
   DIR: Elephants
    
    
   DIR: Buildings
    
    
   DATABASE: PostGIS
    
    

Web
   

Service Type

Service

Data Type

Layers

Web

ESRI WMS

OM\_FIN\_WHALES\_Core

OM\_FIN\_WHALES\_Core

 

FGDC WMS

OM\_FIN\_WHALES\_Poly

OM\_FIN\_WHALES\_Poly

 

ESA Cubeserve

GISDATA\_FISHTRAPS\_PT

GISDATA\_FISHTRAPS\_PT

 

Geoserver WFS

GISDATA\_FISHTRAPS

 

 

 

Untyped

ESA Canada Boundaries

 

 

 

ESA Ontario

-  Comments: Works with this view - useful

File (shapefiles from local filesystem)
                                       

Service Type

Service

Data Type

Layers

File

Dengue

POINT

Dengue

 

Elections

LINE

Elections

 

District

POLYGON

District

 

Landuse

 

Landuse

-  Comments - Doesn't really add value - Service, Data Type and Layer can be the same value!

Possible Use Case

-  User clicks on Service Type - File
-  Service, Data Type and Layers are populated as shown in table above
-  User can click on a Layer to load it
-  Alternatively if user clicks on a Data Type, 2 things happen

#. Layers are filtered accordingly to show layers of the selected Data Type
#. Services are filtered to show Services that serve the selected Data Type

-  This can be continued until the user arrives at a list of required layers

Folder with Shapefiles (shapefiles from local filesystem added as a directory)
                                                                              

Service Type

Service

Data Type

Layers

DIR:ELECTIONS

Centers

POINT

Centers

 

Voting

LINE

Voting

 

Outbreaks

POLYGON

Outbreaks

 

Districts

 

Landuse

Folder with TIFF and SHP
                        

Service Type

Service

Data Type

Layers

DIR:ELECTIONS

Centers

POINT

Centers

 

Voting

LINE

Voting

 

Colombo

DEM:RASTER

Outbreaks

 

Districts

 

Landuse

Weekly Report June 17 2011
~~~~~~~~~~~~~~~~~~~~~~~~~~

Progress Report
^^^^^^^^^^^^^^^

-  Had a great IRC chat last week on the various aspects of the catalogs
-  Worked on evaluating the various ideas put forth

Possible Columns/Views/Components of the Catalog Browse View
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Service Type
''''''''''''

-  these are the kinds of services we have available
-  Database, File, Web, ...
-  categories
-  Service Type could be used as "folders" to organise the "Services" column ??
-  Decoration can be a service type

Service
'''''''

-  this is the "thing" publishing the information
-  Often a database, or a web service, but also a File.

Data Type/Feature Type/Schema
'''''''''''''''''''''''''''''

-  FeatureType in Vectordata
-  two services may publish the same kind of data - i.e a database may publish "roads" and a wfs may
   publish "roads".
-  raster can have different "Schema" - RGB is common, but so is DEM (Digital Elevation Model) and
   also LANDSAT (which has 7 radar bands of informaino)
-  WMS - is just a picture - untyped?

Layer
'''''

-  The final set of layers that are resultant of the previous selecttions

Other factors to consider
^^^^^^^^^^^^^^^^^^^^^^^^^

-  Ability to select start location
-  Previous and Next component boxes should change based on selection
-  Multiple Select

Scenarios
^^^^^^^^^

Scenario 1: Simple Hierarchy
''''''''''''''''''''''''''''

-  **Service Type** - **Service** - **Data Type** - **Layers**
    |image0|
    This is the simplest use case: imagine the current catalog with 100 layers loaded. The proposed
   Scenario 1 would work as follows:
-  The catalog lists the Service Types (File, Database, Web Services, Other, Decorator). The other
   components (Service, DataType and Layers) are blank
-  User selects the Web Services Service Type
-  The Services component is then filled with the Services that fall under the selected Services
   Type (FGDC WMS, ESRI WMS, Geoserver WFS etc.)
-  The user selects the MassGIS WFS. This populates the DataType component with the FeatureTypes.
-  The user select the FeatureType. This loads the Layers relevant to the feature type. Usually this
   might be a 1:1 mapping.

Scenario 2: Simple Hierarchy with Multi-select
''''''''''''''''''''''''''''''''''''''''''''''

-  Same as the above, but allows user to select multiple entities.

Scenario 3: Customizable Hierarchy
''''''''''''''''''''''''''''''''''

-  Allows user to select start component and order. For instance

#. ServiceType - Service - DataType - Layers (default)
#. DataType - Service - Layers

Weekly Report June 10 2011
~~~~~~~~~~~~~~~~~~~~~~~~~~

Progress Report
'''''''''''''''

-  Further clarifications on the prototypes
-  Breakout IRC session to lay everything on the table
-  Further code analysis

Clarifications
''''''''''''''

Thanks to Craig, got some clarifications on the prototypes. Currently Version 3 seems to be a good
fit, with the following clarifications/pointers

-  Service - Layer - Type
-  What exactly is a Service? A grouping of GeoResources?
-  I've loaded 20 shapefiles from my filesystem, and they show up as different catalog items. Should
   these be grouped as one Filesystem/SHP service?
-  What is the Type? Is it the datasource Type?
-  Should Type come before the Layers?

Initial IRC chat to discuss prototypes
''''''''''''''''''''''''''''''''''''''

| Date and Time: http://www.timeanddate.com/worldclock/fixedtime.html?msg=udig+IRC&iso=20110609T11
|  IRC Chat logs:
http://udig.refractions.net/confluence/display/UDIG/2011/06/09/Summer+of+Code+Catalog+IRC+Breakout

Prototypes
''''''''''

Version 1
         

| |image1|
|  **Projects** - **Data Sources/Type/Service** - **Layers**

-  Projects would contain the list of projects loaded in the workspace
-  Data Sources would contain the different data sources (ArcSDE, Files, Mapserver) under the
   project
-  Layers would list the layers under the project's particular Data Source

Version 2
         

| |image2|
|  **Projects** - **Data Sources/Type/Service** - **Category** (Ontology/Grouping) - **Layers**

-  Projects would contain the list of projects loaded in the workspace
-  Data Sources would contain the different data sources (ArcSDE, Files, Mapserver) under the
   project
-  Category would be a logical grouping of the layers, maybe based on an ontology or some standards
-  Layers would list the layers under the project's particular Data Source and categorization

Version 3 (from Jody's original proposal)
                                         

| |image3|
|  **Services** - **Layer** - **Type**
|  This is from Judy's original proposal.

-  Services - will contain the list of services grouped, that are loaded in the workspace
-  Layer - the list of layers that are under a particular service
-  Type - the data sources

Weekly Report June 3 2011
~~~~~~~~~~~~~~~~~~~~~~~~~

What I did
''''''''''

-  Dived into the source code
-  Implemented sample view based on the CatalogView
-  Installed Eclipse Wireframe Creator
-  Worked on coding plan - some questions on the direction to be handled
-  Looked at the Project View and Layered View to see whether it can be reused
-  Research on a view in between - an Ontology View
-  Populated uDIG with many layers from multiple project to get an idea of how exactly the issue
   needs to be solved. See (Problem Statement) below

Todo next week
''''''''''''''

-  Draw some samples
-  Start a discussion

Problem Statement
'''''''''''''''''

|image4|

Questions
'''''''''

Q? Should it be similar to the Java Browsing Perspectives?
                                                          

Projects,Packages,Types and Members are each separate workspace Views. They work with each other but
can be used separately as well. They have got a unique location too. They are part of a perspective
as well

Q? Views within Views - multiple views within the Catalog View
                                                              

| 1. Project View (already there; have to re-implement with point-click)
|  Layers View or use Tree View(already there; have to re-implement with point click)
|  By Catalog Type?
|  Where does decoration go?
|  2. Project View - Type View - Categorization/Ontology (Roads,Landuse,Regions) View - Catalog View

Q? Categorization View based on an ontology
                                           

| Input - list of layers from previous view
|  Output - list of layers for next view

Scratchpad
''''''''''

| CATALOG is a view
|  Search is a view
|  Should I include the search functions within a catalog?

| net.refraction.udig.catalog
|  CatalogPlugin - start - operations re catalog

| look at
|  net.refraction.udig.catalog.ui
|  CatalogUIPlugin - start location for ui

| .search
|  SearchView - reference
|  .internal
|  Messages
|  messages.properties - Labels
|  CatalogView - I think this is what I use to customize as a starting point. Maybe replace
treeviewer with custom class

net.refractions.udig.catalog.ui.CatalogTreeViewer; - look and customize and replace this ; maybe
CatalogBrowseViewer; use a org.eclipse.jface.viewer type to represent a package view

if a new view is required, have to extend org.eclipse.ui.part.ViewPart similar to CatalogView

TODO:
'''''

INSTALL wireframe creator for Eclipse

Weekly Report May 27 2011
~~~~~~~~~~~~~~~~~~~~~~~~~

What I did
''''''''''

-  Completed dev environment setup (with 31 errors)
-  Ran uDig from the launch tab
-  Explored the various packages for the catalog view - net.refractions.udig.catalog.ui
-  Did my first commit to the local git repo - Made a spelling correction in a comment as a test
   commit - hip hip hooray!

Research: Java Browsing Perspective
'''''''''''''''''''''''''''''''''''

Resources
         

http://www.eclipsezone.com/eclipse/forums/t85114.html

Screens
       

|image5|

| 
|  As a starter, my uDig codebase in Eclipse, viewed under the Java Browsing Perspective - after
all, eat your own dog food |image6|. The browsing perspective works well for package viewer and
classes and the challenge is to get it to work well for the uDig catalog browse

What I plan to do next week
'''''''''''''''''''''''''''

Stumbling blocks
''''''''''''''''

-  Encountered a set of errors (31) when doing a build - however, was able to start uDig (thanks
   Andrea). The errors I have categorized into 3 classes to avoid putting all 31 down here

#. Missing source folder
    e.g: Project 'net.refractions.udig\_application.source' is missing required source folder:
   'src/' net.refractions.udig\_application.source - Build Path Problem
#. Build problems resulting from previous errors
    e.g: The project cannot be built until build path errors are resolved -
   net.refractions.udig\_application.source - Unknown Java Problem
#. Inheritance from abstract method error
    e.g: The type AdaptingBBOX must implement the inherited abstract method
   MultiValuedFilter.getMatchAction() -AdaptingBBOX.java -
   /net.refractions.udig.core/src/net/refractions/udig/core/filter line 6 Java

Upto May 22, 2011 - Community Bonding Period
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

What I did
''''''''''

Community bonding
                 

-  Joined up on mailing lists, IRC
-  Introductions on lists, IRC
-  Created wiki page

   Training and Rampup
                      

-  Obtained training material from Refractions
-  Covered half the training material on uDig and Eclipse RCP
-  Read through Wiki

   Infrastructure setup
                       

-  Setup Eclipse Modelling Tools, Eclipse for Plugin development
-  Setup Eclipse for platform development following excellent Wiki resources available on the uDig
   dev wiki
-  Setup GIT on my Ubuntu Linux 10.04 (need an upgrade to the latest!)
-  Setup a GIT clone of the platform on Gitorius - dropped this based on community feedback
-  Setup and configured on GIThub following community consensus
-  Forked udig-platform to mifanc/udig-platform
-  Setup a Github clone of the uDig platform - cloned on local machine
   https://github.com/mifanc/udig-platform
-  Added upstream
-  git remote add upstream git://github.com/uDig/udig-platform.git
-  git fetch upstream

   What I plan to do next week
   '''''''''''''''''''''''''''

   Coding!

   Stumbling blocks
   ''''''''''''''''

   The uDig wiki and instruction is very comprehensive; and although the process of setting up the
   dev environment is quite complex, I managed to get through with some stumbling blocks

-  I had some confusion on plugin development vs. udig-platform development. I had started off by
   following the instructions to setup the plugin development environment along with the SDK and all
   when I realized that I was barking up the wrong tree. I then redid the setup with instructions to
   setup the dev environment for platform development
-  I encountered some errors mainly due to missing some steps. The first time, the libraries were
   not inserted into the plugins working set.
-  

| 

Attachments:

| |image7|
`udig\_in\_java\_browsing\_perspective.png <download/attachments/13238919/udig_in_java_browsing_perspective.png>`__
(image/png)
|  |image8|
`udig\_catalog\_and\_layers\_filled\_rs.png <download/attachments/13238919/udig_catalog_and_layers_filled_rs.png>`__
(image/png)
|  |image9| `catalog\_view\_1.png <download/attachments/13238919/catalog_view_1.png>`__ (image/png)
|  |image10| `catalog\_view\_v2rs.png <download/attachments/13238919/catalog_view_v2rs.png>`__
(image/png)
|  |image11| `Catalog.png <download/attachments/13238919/Catalog.png>`__ (image/png)
|  |image12|
`scenario\_1\_catalog\_rs.png <download/attachments/13238919/scenario_1_catalog_rs.png>`__
(image/png)

+-------------+----------------------------------------------------------+
| |image14|   | Document generated by Confluence on Aug 11, 2014 12:31   |
+-------------+----------------------------------------------------------+

.. |image0| image:: /images/gsoc_2011_-_catalog_view_reports/scenario_1_catalog_rs.png
.. |image1| image:: /images/gsoc_2011_-_catalog_view_reports/catalog_view_1.png
.. |image2| image:: /images/gsoc_2011_-_catalog_view_reports/catalog_view_v2rs.png
.. |image3| image:: /images/gsoc_2011_-_catalog_view_reports/Catalog.png
.. |image4| image:: /images/gsoc_2011_-_catalog_view_reports/udig_catalog_and_layers_filled_rs.png
.. |image5| image:: /images/gsoc_2011_-_catalog_view_reports/udig_in_java_browsing_perspective.png
.. |image6| image:: images/icons/emoticons/smile.gif
.. |image7| image:: images/icons/bullet_blue.gif
.. |image8| image:: images/icons/bullet_blue.gif
.. |image9| image:: images/icons/bullet_blue.gif
.. |image10| image:: images/icons/bullet_blue.gif
.. |image11| image:: images/icons/bullet_blue.gif
.. |image12| image:: images/icons/bullet_blue.gif
.. |image13| image:: images/border/spacer.gif
.. |image14| image:: images/border/spacer.gif
